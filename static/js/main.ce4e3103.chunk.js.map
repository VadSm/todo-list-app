{"version":3,"sources":["startup/redux/actions.js","startup/redux/reducers/todos.js","startup/redux/reducers/filters.js","startup/redux/index.js","components/ui/Header.jsx","startup/redux/selectors.js","api/index.js","startup/redux/thunks.js","components/ui/CustomInput.jsx","components/ui/CustomSelect.jsx","components/todo-list/controls/NewTodoForm.jsx","components/ui/CustomCheckbox.jsx","components/todo-list/controls/EditTodoForm.jsx","components/todo-list/controls/DeleteTodoButton.jsx","components/todo-list/ToDoItem.jsx","components/ui/CustomButton.jsx","components/todo-list/controls/CompletedControlsSection.jsx","components/todo-list/controls/FilterControlsSection.jsx","components/todo-list/controls/PriorityControlsSection.jsx","components/ui/LoadingIndicator.jsx","components/todo-list/ToDoListContainer.jsx","App.jsx","Root.jsx","index.js"],"names":["setLoading","payload","type","initialState","tasks","isLoading","todos","state","map","task","id","newValue","title","filter","completed","isSortedByPriority","activePriorityFilter","filters","rootReducer","combineReducers","configureStore","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","React","memo","className","getTasks","getIsSortedByPriority","getActivePriorityFilter","getCountOfUncompleted","createSelector","length","getSortedByPriorityTasks","sort","a","b","priorityValues","low","medium","high","priority","getFilteredByPriorityTasks","instance","axios","create","baseURL","todosAPI","getTodos","get","createTodo","newTodo","post","deleteTodo","delete","updateTodo","editedTodo","put","updateAllStatuses","newStatus","deleteAllCompleted","asyncRequest","dispatch","APIMethod","resultCallback","then","catch","message","toast","error","finally","placeholder","inputProps","required","options","defaultValue","selectCallback","onChange","selectProps","defaultActiveValue","useState","isOpen","toggleOpen","activeValue","changeActiveValue","handleChange","target","dataset","value","handleClick","useCallback","role","tabIndex","onClick","key","data-value","data-title","priorityOptions","connect","changeTodoValue","changePriority","onSubmit","e","preventDefault","data","createNewTodoRequest","isChecked","checked","taskId","toggleEditing","changeValue","inputElement","useRef","useEffect","current","focus","getState","taskToUpdate","find","undefined","updateTodoRequest","ref","isEditing","handleDoubleClick","handleBlur","toggleTodoStatusRequest","onDoubleClick","onBlur","isDisabled","outline","buttonProps","disabled","countOfUncompleted","isAnyUncompleted","allTasksCount","changeStatusFunction","handleDelete","activeFilter","buttonsData","defaultFilter","history","useHistory","push","filterControls","handleFilter","priorityControls","useMemo","LoadingIndicator","useParams","App","Root","store","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ce4e3103.chunk.js","sourcesContent":["export const ADD_TODO = 'ADD_TODO';\nexport const TOGGLE_COMPLETED = 'TOGGLE_COMPLETED';\nexport const EDIT_TODO = 'EDIT_TODO';\nexport const DELETE_TODO = 'DELETE_TODO';\nexport const TOGGLE_ALL_TODOS_COMPLETED = 'TOGGLE_ALL_TODOS_COMPLETED';\nexport const DELETE_ALL_COMPLETED = 'DELETE_ALL_COMPLETED';\nexport const TOGGLE_SORTING_BY_PRIORITY = 'TOGGLE_SORTING_BY_PRIORITY';\nexport const SET_ACTIVE_PRIORITY_FILTER = 'SET_ACTIVE_PRIORITY_FILTER';\nexport const SET_LOADING = 'SET_LOADING';\nexport const SAVE_TODOS = 'SAVE_TODOS';\n\nexport const addTodo = payload => ({\n  type: ADD_TODO,\n  payload,\n});\n\nexport const toggleCompleted = payload => ({\n  type: TOGGLE_COMPLETED,\n  payload,\n});\n\nexport const editTodo = payload => ({\n  type: EDIT_TODO,\n  payload,\n});\n\nexport const deleteTodo = payload => ({\n  type: DELETE_TODO,\n  payload,\n});\n\nexport const toggleAllTodosCompleted = payload => ({\n  type: TOGGLE_ALL_TODOS_COMPLETED,\n  payload,\n});\n\nexport const deleteAllCompleted = () => ({\n  type: DELETE_ALL_COMPLETED,\n});\n\nexport const toggleSortingByPriority = () => ({\n  type: TOGGLE_SORTING_BY_PRIORITY,\n});\n\nexport const setActivePriorityFilter = payload => ({\n  type: SET_ACTIVE_PRIORITY_FILTER,\n  payload,\n});\n\nexport const setLoading = payload => ({\n  type: SET_LOADING,\n  payload,\n});\n\nexport const saveTodos = payload => ({\n  type: SAVE_TODOS,\n  payload,\n});\n","import {\n  ADD_TODO,\n  TOGGLE_COMPLETED,\n  EDIT_TODO,\n  DELETE_TODO,\n  TOGGLE_ALL_TODOS_COMPLETED,\n  DELETE_ALL_COMPLETED,\n  SET_LOADING,\n  SAVE_TODOS,\n} from 'startup/redux/actions';\n\nconst initialState = {\n  tasks: [],\n  isLoading: false,\n};\n\nconst todos = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ADD_TODO:\n      return {\n        ...state,\n        tasks: [\n          ...state.tasks,\n          payload,\n        ],\n      };\n    case EDIT_TODO:\n      return {\n        ...state,\n        tasks: state.tasks.map((task) => {\n          const { id, newValue } = payload;\n          if (task.id === id) {\n            return {\n              ...task,\n              title: newValue,\n            };\n          }\n\n          return task;\n        }),\n      };\n    case DELETE_TODO:\n      return {\n        ...state,\n        tasks: state.tasks.filter(task => task.id !== payload),\n      };\n    case TOGGLE_COMPLETED:\n      return {\n        ...state,\n        tasks: state.tasks.map((task) => {\n          if (task.id === payload) {\n            return {\n              ...task,\n              completed: !task.completed,\n            };\n          }\n\n          return task;\n        }),\n      };\n    case TOGGLE_ALL_TODOS_COMPLETED:\n      return {\n        ...state,\n        tasks: state.tasks.map(task => ({\n          ...task,\n          completed: payload,\n        })),\n      };\n    case DELETE_ALL_COMPLETED:\n      return {\n        ...state,\n        tasks: state.tasks.filter(task => !task.completed),\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        isLoading: payload,\n      };\n    case SAVE_TODOS:\n      return {\n        ...state,\n        tasks: payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default todos;\n","import { TOGGLE_SORTING_BY_PRIORITY, SET_ACTIVE_PRIORITY_FILTER } from 'startup/redux/actions';\n\nconst initialState = {\n  isSortedByPriority: false,\n  activePriorityFilter: '',\n};\n\nconst filters = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case TOGGLE_SORTING_BY_PRIORITY:\n      return {\n        ...state,\n        isSortedByPriority: !state.isSortedByPriority,\n      };\n    case SET_ACTIVE_PRIORITY_FILTER:\n      return {\n        ...state,\n        activePriorityFilter: payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default filters;\n","/* eslint-disable no-underscore-dangle */\nimport {\n  createStore,\n  applyMiddleware,\n  compose,\n  combineReducers,\n} from 'redux';\nimport thunk from 'redux-thunk';\n\nimport todos from './reducers/todos';\nimport filters from './reducers/filters';\n\nconst rootReducer = combineReducers({\n  todos,\n  filters,\n});\n\nconst configureStore = () => {\n  const store = createStore(\n    rootReducer,\n    compose(\n      applyMiddleware(thunk),\n      // eslint-disable-next-line no-undef\n      window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n    ),\n  );\n\n  return store;\n};\n\nexport default configureStore();\n","import React from 'react';\n\nconst Header = () => (\n  <header className=\"app-header\">\n    <h2>My tasks</h2>\n  </header>\n);\n\nexport default React.memo(Header);\n","import { createSelector } from 'reselect';\n\nexport const getTasks = ({ todos }) => todos.tasks;\n\nexport const getIsSortedByPriority = ({ filters }) => filters.isSortedByPriority;\n\nexport const getActivePriorityFilter = ({ filters }) => filters.activePriorityFilter;\n\nexport const checkIsLoading = ({ todos }) => todos.isLoading;\n\nexport const getCountOfUncompleted = createSelector(\n  getTasks,\n  tasks => (\n    tasks.filter(task => !task.completed).length\n  ),\n);\n\nexport const getSortedByPriorityTasks = createSelector(\n  getTasks,\n  getIsSortedByPriority,\n  (tasks, isSortedByPriority) => {\n    if (isSortedByPriority) {\n      return [...tasks].sort((a, b) => {\n        const priorityValues = {\n          low: 1,\n          medium: 2,\n          high: 3,\n        };\n\n        return priorityValues[b.priority] - priorityValues[a.priority];\n      });\n    }\n\n    return tasks;\n  },\n);\n\nexport const getFilteredByPriorityTasks = createSelector(\n  getSortedByPriorityTasks,\n  getActivePriorityFilter,\n  (tasks, activePriorityFilter) => {\n    if (activePriorityFilter) {\n      return tasks.filter(task => task.priority === activePriorityFilter);\n    }\n\n    return tasks;\n  },\n);\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'http://localhost:9000/',\n});\n\nconst todosAPI = {\n  getTodos() {\n    return instance.get('all');\n  },\n  createTodo(newTodo) {\n    return instance.post('create', newTodo);\n  },\n  deleteTodo(id) {\n    return instance.delete(`delete/${id}`);\n  },\n  updateTodo(editedTodo) {\n    return instance.put('update', editedTodo);\n  },\n  updateAllStatuses(newStatus) {\n    return instance.put(`updateAllStatuses/${newStatus}`);\n  },\n  deleteAllCompleted() {\n    return instance.delete('deleteAllCompleted');\n  },\n};\n\nexport default todosAPI;\n","import todosAPI from 'api';\nimport { toast } from 'react-toastify';\n\nimport {\n  setLoading,\n  saveTodos,\n  addTodo,\n  deleteTodo,\n  editTodo,\n  toggleAllTodosCompleted,\n  deleteAllCompleted,\n  toggleCompleted,\n} from './actions';\n\nconst asyncRequest = (dispatch, APIMethod, resultCallback) => {\n  dispatch(setLoading(true));\n\n  APIMethod()\n    .then(resultCallback)\n    .catch(({ message }) => toast.error(`Error: ${message}`))\n    .finally(() => dispatch(setLoading(false)));\n};\n\nexport const getTodosRequest = () => (\n  (dispatch) => {\n    asyncRequest(\n      dispatch,\n      todosAPI.getTodos,\n      ({ data }) => dispatch(saveTodos(data)),\n    );\n  }\n);\n\nexport const createNewTodoRequest = ({ title, priority }) => (\n  (dispatch) => {\n    asyncRequest(\n      dispatch,\n      () => todosAPI.createTodo({ title, priority }),\n      ({ data }) => dispatch(addTodo(data)),\n    );\n  }\n);\n\nexport const deleteTodoRequest = id => (\n  (dispatch) => {\n    asyncRequest(\n      dispatch,\n      () => todosAPI.deleteTodo(id),\n      ({ data }) => dispatch(deleteTodo(data)),\n    );\n  }\n);\n\nexport const updateTodoRequest = ({ id, newValue }) => (\n  (dispatch, getState) => {\n    const { todos: { tasks } } = getState();\n    const taskToUpdate = tasks.find(task => task.id === id);\n\n    if (taskToUpdate !== undefined) {\n      asyncRequest(\n        dispatch,\n        () => todosAPI.updateTodo({\n          ...taskToUpdate,\n          title: newValue,\n        }),\n        () => dispatch(editTodo({ id, newValue })),\n      );\n    }\n  }\n);\n\nexport const updateAllTodoStatusesRequest = newStatus => (\n  (dispatch) => {\n    asyncRequest(\n      dispatch,\n      () => todosAPI.updateAllStatuses(newStatus),\n      () => dispatch(toggleAllTodosCompleted(newStatus)),\n    );\n  }\n);\n\nexport const deleteAllCompletedTodosRequest = () => (\n  (dispatch) => {\n    asyncRequest(\n      dispatch,\n      () => todosAPI.deleteAllCompleted(),\n      () => dispatch(deleteAllCompleted()),\n    );\n  }\n);\n\nexport const toggleTodoStatusRequest = id => (\n  (dispatch, getState) => {\n    const { todos: { tasks } } = getState();\n    const taskToUpdate = tasks.find(task => task.id === id);\n\n    if (taskToUpdate !== undefined) {\n      asyncRequest(\n        dispatch,\n        () => todosAPI.updateTodo({\n          ...taskToUpdate,\n          completed: !taskToUpdate.completed,\n        }),\n        () => dispatch(toggleCompleted(id)),\n      );\n    }\n  }\n);\n","import React from 'react';\n\nconst CustomInput = ({ className = '', placeholder, ...inputProps }) => (\n  <div className={`custom-input ${className}`}>\n    <input\n      required\n      {\n        ...inputProps\n      }\n    />\n    {placeholder && <span className=\"placeholder\">{placeholder}</span>}\n  </div>\n);\n\nexport default React.memo(CustomInput);\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useState, useCallback } from 'react';\n\nconst CustomSelect = ({\n  options,\n  defaultValue,\n  onChange: selectCallback,\n  className,\n  ...selectProps\n}) => {\n  const defaultActiveValue = defaultValue || (options.length > 0 && options[0].title) || 'Choose';\n\n  const [isOpen, toggleOpen] = useState(false);\n  const [activeValue, changeActiveValue] = useState(defaultActiveValue);\n\n  const handleChange = ({ target: { dataset: { title, value } } }) => {\n    changeActiveValue(title);\n    toggleOpen(false);\n    return selectCallback ? selectCallback(value) : null;\n  };\n\n  const handleClick = useCallback(\n    () => toggleOpen(!isOpen),\n    [isOpen],\n  );\n\n  const renderOptions = data => (\n    data.map(({ id, title, value }) => (\n      <div\n        key={id}\n        role=\"button\"\n        tabIndex={0}\n        className=\"option\"\n        onClick={handleChange}\n        data-value={value}\n        data-title={title}\n      >\n        {title}\n      </div>\n    ))\n  );\n\n  return (\n    <div className={`custom-select ${className} ${isOpen ? 'open' : ''}`}>\n      <div\n        role=\"button\"\n        tabIndex={0}\n        className=\"active-value\"\n        onClick={handleClick}\n        {\n          ...selectProps\n        }\n      >\n        {activeValue}\n      </div>\n      <div className=\"options\">\n        {options.length > 0 && renderOptions(options)}\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(CustomSelect);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport { createNewTodoRequest } from 'startup/redux/thunks';\n\nimport CustomInput from 'components/ui/CustomInput';\nimport CustomSelect from 'components/ui/CustomSelect';\n\nconst priorityOptions = [\n  {\n    id: 'high',\n    title: 'High',\n    value: 'high',\n  },\n  {\n    id: 'medium',\n    title: 'Medium',\n    value: 'medium',\n  },\n  {\n    id: 'low',\n    title: 'Low',\n    value: 'low',\n  },\n];\n\nconst NewTodoForm = ({ dispatch }) => {\n  const [newTodo, changeTodoValue] = useState('');\n  const [priority, changePriority] = useState('medium');\n\n  const handleChange = ({ target: { value } }) => {\n    changeTodoValue(value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(\n      createNewTodoRequest({\n        title: newTodo,\n        priority,\n      }),\n    );\n    changeTodoValue('');\n  };\n\n  return (\n    <form className=\"new-todo-form\" onSubmit={handleSubmit}>\n      <CustomInput\n        type=\"text\"\n        className=\"new-todo-input\"\n        placeholder=\"Add a new task\"\n        onChange={handleChange}\n        value={newTodo}\n      />\n      <CustomSelect\n        options={priorityOptions}\n        defaultValue=\"Medium\"\n        onChange={changePriority}\n        className={`priority-select ${!newTodo ? 'hidden' : ''}`}\n      />\n    </form>\n  );\n};\n\nexport default connect()(NewTodoForm);\n","import React from 'react';\n\nconst CustomCheckbox = ({ className = '', isChecked, ...inputProps }) => (\n  <input\n    type=\"checkbox\"\n    checked={isChecked}\n    className={`custom-checkbox ${className}`}\n    {\n      ...inputProps\n    }\n  />\n);\n\nexport default React.memo(CustomCheckbox);\n","import React, {\n  useState,\n  useEffect,\n  useRef,\n} from 'react';\nimport { connect } from 'react-redux';\n\nimport { updateTodoRequest } from 'startup/redux/thunks';\n\nconst EditTodoForm = ({\n  taskId,\n  defaultValue,\n  toggleEditing,\n  dispatch,\n}) => {\n  const [newValue, changeValue] = useState(defaultValue);\n  const inputElement = useRef(null);\n\n  useEffect(() => {\n    inputElement.current.focus();\n  }, []);\n\n  const handleChange = ({ target: { value } }) => {\n    changeValue(value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(\n      updateTodoRequest({\n        id: taskId,\n        newValue,\n      }),\n    );\n    toggleEditing(false);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"edit-todo-form\">\n      <input\n        ref={inputElement}\n        className=\"edit-todo-input\"\n        value={newValue}\n        onChange={handleChange}\n      />\n    </form>\n  );\n};\n\nexport default connect()(EditTodoForm);\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nimport { deleteTodoRequest } from 'startup/redux/thunks';\n\nconst DeleteTodoButton = ({ taskId, dispatch }) => {\n  const handleClick = () => {\n    dispatch(deleteTodoRequest(taskId));\n  };\n\n  return (\n    <button type=\"button\" onClick={handleClick} className=\"delete-todo-btn\" />\n  );\n};\n\nexport default connect()(DeleteTodoButton);\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useState, useCallback } from 'react';\nimport { connect } from 'react-redux';\n\nimport { toggleTodoStatusRequest } from 'startup/redux/thunks';\n\nimport CustomCheckbox from 'components/ui/CustomCheckbox';\nimport EditTodoForm from 'components/todo-list/controls/EditTodoForm';\nimport DeleteTodoButton from 'components/todo-list/controls/DeleteTodoButton';\n\nconst ToDoItem = ({\n  data: {\n    id,\n    title,\n    completed,\n    priority,\n  },\n  dispatch,\n}) => {\n  const [isEditing, toggleEditing] = useState(false);\n\n  /*\n    implementation of method from prevention the opening of edit form by fast clicking on item\n  */\n  // let timer = null;\n  // let clicks = 0;\n  // const handleDoubleClick = () => {\n  //   clicks += 1;\n\n  //   if (clicks === 1) {\n  //     timer = setTimeout(() => {\n  //       clicks = 0;\n  //     }, 200);\n  //   } else {\n  //     clearTimeout(timer);\n  //     toggleEditing(true);\n  //     clicks = 0;\n  //   }\n  // };\n\n  const handleDoubleClick = useCallback(() => {\n    toggleEditing(true);\n  }, []);\n\n  const handleBlur = useCallback(() => {\n    toggleEditing(false);\n  }, []);\n\n  const handleChange = useCallback(() => {\n    dispatch(toggleTodoStatusRequest(id));\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <li\n      className={`todo-item ${completed ? 'completed' : ''} ${isEditing ? 'editing' : ''}`}\n      onDoubleClick={handleDoubleClick}\n      onBlur={handleBlur}\n    >\n      {isEditing ? (\n        <EditTodoForm taskId={id} defaultValue={title} toggleEditing={toggleEditing} />\n      ) : (\n        <div className=\"view\">\n          <div className=\"toggle-part\">\n            <CustomCheckbox\n              className=\"toggle-completed-checkbox\"\n              isChecked={completed}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"title-part\">\n            <span className=\"title\">{title}</span>\n            <span className={`priority ${priority || ''}`}>{priority}</span>\n          </div>\n          <DeleteTodoButton taskId={id} />\n        </div>\n      )}\n    </li>\n  );\n};\n\nexport default connect()(ToDoItem);\n","import React from 'react';\n\nconst CustomButton = ({\n  className = '',\n  title,\n  isDisabled,\n  outline,\n  ...buttonProps\n}) => (\n  <button\n    type=\"button\"\n    className={`custom-button ${className} ${outline ? 'outline' : ''}`}\n    disabled={isDisabled}\n    {\n      ...buttonProps\n    }\n  >\n    {title}\n  </button>\n);\n\nexport default React.memo(CustomButton);\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useCallback } from 'react';\nimport { connect } from 'react-redux';\n\nimport { getCountOfUncompleted, getTasks } from 'startup/redux/selectors';\nimport { updateAllTodoStatusesRequest, deleteAllCompletedTodosRequest } from 'startup/redux/thunks';\n\nimport CustomButton from 'components/ui/CustomButton';\n\nconst CompletedControlsSection = ({\n  countOfUncompleted,\n  tasks,\n  dispatch,\n}) => {\n  const isAnyUncompleted = countOfUncompleted > 0;\n  const allTasksCount = tasks.length;\n\n  const changeStatusFunction = useCallback(() => {\n    dispatch(updateAllTodoStatusesRequest(isAnyUncompleted));\n  }, [isAnyUncompleted]);\n\n  const handleDelete = useCallback(() => {\n    dispatch(deleteAllCompletedTodosRequest());\n  }, []);\n\n  return (\n    <div className=\"completed-controls-section\">\n      <span className=\"counter\">\n        {isAnyUncompleted ? `You have ${countOfUncompleted} uncompleted tasks` : ''}\n      </span>\n      <CustomButton\n        className=\"toggle-all-tasks-btn\"\n        title={`${isAnyUncompleted ? 'Complete all' : 'Uncomplete all'}`}\n        onClick={changeStatusFunction}\n        outline={!isAnyUncompleted}\n      />\n      <CustomButton\n        className=\"delete-completed-btn\"\n        title=\"Delete completed\"\n        isDisabled={countOfUncompleted === allTasksCount}\n        onClick={handleDelete}\n      />\n    </div>\n  );\n};\n\nexport default connect(state => ({\n  countOfUncompleted: getCountOfUncompleted(state),\n  tasks: getTasks(state),\n}))(CompletedControlsSection);\n","import React, { useCallback } from 'react';\n\nimport { useHistory } from 'react-router-dom';\n\nimport CustomButton from 'components/ui/CustomButton';\n\nconst FilterControlsSection = ({ activeFilter }) => {\n  const buttonsData = [\n    {\n      id: 'all',\n      title: 'All',\n      filter: '',\n      defaultFilter: activeFilter === undefined,\n    },\n    {\n      id: 'active',\n      title: 'Active',\n      filter: 'active',\n    },\n    {\n      id: 'done',\n      title: 'Done',\n      filter: 'done',\n    },\n  ];\n\n  const history = useHistory();\n  const handleClick = useCallback(\n    ({ target: { value: filter } }) => {\n      history.push(`/${filter}`);\n    },\n    [history],\n  );\n\n  const filterControls = buttonsData.map(({\n    id,\n    title,\n    filter,\n    defaultFilter,\n  }) => (\n    <CustomButton\n      key={id}\n      title={title}\n      onClick={handleClick}\n      value={filter}\n      outline={!defaultFilter && activeFilter !== filter}\n      className=\"filter-btn\"\n    />\n  ));\n\n  return (\n    <div className=\"filter-controls-section\">\n      {filterControls}\n    </div>\n  );\n};\n\nexport default React.memo(FilterControlsSection);\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useCallback, useMemo } from 'react';\nimport { connect } from 'react-redux';\n\nimport { toggleSortingByPriority, setActivePriorityFilter } from 'startup/redux/actions';\nimport { getIsSortedByPriority } from 'startup/redux/selectors';\n\nimport CustomButton from 'components/ui/CustomButton';\n\nconst buttonsData = [\n  {\n    id: 'all',\n    title: 'All',\n    filter: '',\n  },\n  {\n    id: 'high',\n    title: 'High',\n    filter: 'high',\n  },\n  {\n    id: 'medium',\n    title: 'Medium',\n    filter: 'medium',\n  },\n  {\n    id: 'low',\n    title: 'Low',\n    filter: 'low',\n  },\n];\n\nconst PriorityControlsSection = ({\n  activePriorityFilter,\n  isSortedByPriority,\n  dispatch,\n}) => {\n  const handleClick = useCallback(() => {\n    dispatch(toggleSortingByPriority());\n  }, []);\n\n  const handleFilter = useCallback(({ target: { value } }) => {\n    dispatch(setActivePriorityFilter(value));\n  }, []);\n\n  const priorityControls = useMemo(() => (\n    buttonsData.map(({ id, title, filter }) => (\n      <CustomButton\n        key={id}\n        className={`priority-filter-btn ${filter || ''}`}\n        title={title}\n        outline={activePriorityFilter !== filter}\n        value={filter}\n        onClick={handleFilter}\n      />\n    ))\n  ), [activePriorityFilter]);\n\n  return (\n    <div className=\"priority-controls-section\">\n      <div className=\"priority-filters\">\n        {priorityControls}\n      </div>\n      <CustomButton\n        className=\"sort-by-priority-btn\"\n        onClick={handleClick}\n        title={isSortedByPriority ? 'Sort by time' : 'Sort by priority'}\n        outline={isSortedByPriority}\n      />\n    </div>\n  );\n};\n\nexport default connect(state => ({\n  isSortedByPriority: getIsSortedByPriority(state),\n}))(PriorityControlsSection);\n","import React from 'react';\n\nconst LoadingIndicator = () => (\n  <div className=\"loading-container\">\n    <div className=\"loading-indicator\">\n      <div />\n      <div />\n      <div />\n      <div />\n    </div>\n  </div>\n);\n\nexport default LoadingIndicator;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nimport { getFilteredByPriorityTasks, getActivePriorityFilter, checkIsLoading } from 'startup/redux/selectors';\nimport { getTodosRequest } from 'startup/redux/thunks';\n\nimport NewTodoForm from 'components/todo-list/controls/NewTodoForm';\nimport ToDoItem from 'components/todo-list/ToDoItem';\nimport CompletedControlsSection from 'components/todo-list/controls/CompletedControlsSection';\nimport FilterControlsSection from 'components/todo-list/controls/FilterControlsSection';\nimport PriorityControlsSection from 'components/todo-list/controls/PriorityControlsSection';\nimport LoadingIndicator from 'components/ui/LoadingIndicator';\n\nconst ToDoListContainer = ({\n  tasks,\n  activePriorityFilter,\n  dispatch,\n  isLoading,\n}) => {\n  const { filter } = useParams();\n\n  useEffect(() => {\n    dispatch(getTodosRequest());\n  }, []);\n\n  const renderTasks = (data) => {\n    const preparedTasks = data.filter((task) => {\n      switch (filter) {\n        case 'done':\n          return task.completed;\n        case 'active':\n          return !task.completed;\n        default:\n          return task;\n      }\n    });\n\n    return preparedTasks.map(task => (\n      <ToDoItem key={task.id} data={task} />\n    ));\n  };\n\n  return (\n    <div className=\"todo-list-container\">\n      {isLoading && <LoadingIndicator />}\n      <NewTodoForm />\n      {activePriorityFilter || tasks.length > 0 ? (\n        <Fragment>\n          <ul className=\"todo-list\">\n            {renderTasks(tasks)}\n          </ul>\n          <CompletedControlsSection />\n          <FilterControlsSection activeFilter={filter} />\n          <PriorityControlsSection activePriorityFilter={activePriorityFilter} />\n        </Fragment>\n      ) : (\n        <h2 className=\"no-todos-title\">You have not any tasks yet</h2>\n      )}\n    </div>\n  );\n};\n\nexport default connect(state => ({\n  tasks: getFilteredByPriorityTasks(state),\n  activePriorityFilter: getActivePriorityFilter(state),\n  isLoading: checkIsLoading(state),\n}))(ToDoListContainer);\n","import React from 'react';\n\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport Header from 'components/ui/Header';\nimport ToDoListContainer from 'components/todo-list/ToDoListContainer';\n\nconst App = () => (\n  <div className=\"App\">\n    <div className=\"container\">\n      <Header />\n      <ToDoListContainer />\n      <ToastContainer />\n    </div>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\n\nimport { Provider } from 'react-redux';\nimport store from 'startup/redux';\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport App from './App';\n\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <Route path=\"/:filter?\" component={App} />\n    </Router>\n  </Provider>\n);\n\nexport default Root;\n","/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable no-undef */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'styles/index.scss';\nimport Root from './Root';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}